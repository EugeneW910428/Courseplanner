{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n\n  // Validate that all fields are filled\n  if (!careerAspiration || !coursePreference || !transcriptFile) {\n    alert('Please fill all required fields and upload the transcript.');\n    return;\n  }\n\n  // Create a FormData object to send all data together\n  const formData = new FormData();\n  formData.append('careerAspiration', careerAspiration);\n  formData.append('creditsPerQuarter', creditsPerQuarter);\n  formData.append('coursePreference', coursePreference);\n  formData.append('transcript', transcriptFile);\n\n  // Log FormData values for debugging\n  for (let [key, value] of formData.entries()) {\n    console.log(`${key}:`, value);\n  }\n\n  // Call the onGenerateSchedule function with the FormData object\n  onGenerateSchedule(formData);\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","careerAspiration","coursePreference","transcriptFile","alert","formData","FormData","append","creditsPerQuarter","key","value","entries","console","log","onGenerateSchedule"],"sources":["/Users/eugenewang/Downloads/CapstoneProject/frontend/src/components/CoursePlannerForm.js"],"sourcesContent":["const handleSubmit = async (e) => {\n    e.preventDefault();\n  \n    // Validate that all fields are filled\n    if (!careerAspiration || !coursePreference || !transcriptFile) {\n      alert('Please fill all required fields and upload the transcript.');\n      return;\n    }\n  \n    // Create a FormData object to send all data together\n    const formData = new FormData();\n    formData.append('careerAspiration', careerAspiration);\n    formData.append('creditsPerQuarter', creditsPerQuarter);\n    formData.append('coursePreference', coursePreference);\n    formData.append('transcript', transcriptFile);\n  \n    // Log FormData values for debugging\n    for (let [key, value] of formData.entries()) {\n      console.log(`${key}:`, value);\n    }\n  \n    // Call the onGenerateSchedule function with the FormData object\n    onGenerateSchedule(formData);\n  };\n  \n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;;EAElB;EACA,IAAI,CAACC,gBAAgB,IAAI,CAACC,gBAAgB,IAAI,CAACC,cAAc,EAAE;IAC7DC,KAAK,CAAC,4DAA4D,CAAC;IACnE;EACF;;EAEA;EACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,kBAAkB,EAAEN,gBAAgB,CAAC;EACrDI,QAAQ,CAACE,MAAM,CAAC,mBAAmB,EAAEC,iBAAiB,CAAC;EACvDH,QAAQ,CAACE,MAAM,CAAC,kBAAkB,EAAEL,gBAAgB,CAAC;EACrDG,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEJ,cAAc,CAAC;;EAE7C;EACA,KAAK,IAAI,CAACM,GAAG,EAAEC,KAAK,CAAC,IAAIL,QAAQ,CAACM,OAAO,CAAC,CAAC,EAAE;IAC3CC,OAAO,CAACC,GAAG,CAAC,GAAGJ,GAAG,GAAG,EAAEC,KAAK,CAAC;EAC/B;;EAEA;EACAI,kBAAkB,CAACT,QAAQ,CAAC;AAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}