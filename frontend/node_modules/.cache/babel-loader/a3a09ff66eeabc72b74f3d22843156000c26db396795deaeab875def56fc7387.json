{"ast":null,"code":"var _jsxFileName = \"/Users/eugenewang/Downloads/CapstoneProject/frontend/src/components/Courses.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchCourses, fetchCompletedCourses } from '../services/courseService'; // Import the correct service\nimport { useGlobalContext } from '../context/GlobalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Courses = () => {\n  _s();\n  const [coreCourses, setCoreCourses] = useState([]);\n  const [electiveCourses, setElectiveCourses] = useState([]);\n  const [completedCourses, setCompletedCourses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {\n    uploadedTranscript\n  } = useGlobalContext();\n  useEffect(() => {\n    // Fetch completed courses first\n    const loadCompletedCourses = async () => {\n      if (!uploadedTranscript) return; // Exit if no transcript is uploaded\n\n      try {\n        const formData = new FormData();\n        formData.append('transcript', uploadedTranscript);\n\n        // Assuming you have an endpoint that extracts completed courses\n        const response = await fetchCompletedCourses(formData);\n        if (response.completedCourses) {\n          setCompletedCourses(response.completedCourses);\n        }\n      } catch (error) {\n        console.error('Error loading completed courses:', error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadCompletedCourses();\n  }, [uploadedTranscript]);\n  useEffect(() => {\n    // Fetch core and elective courses\n    const loadCourses = async () => {\n      try {\n        const response = await fetchCourses(); // Assuming fetchCourses gets all available courses\n        const {\n          core,\n          electives\n        } = response;\n        setCoreCourses(core || []);\n        setElectiveCourses(electives || []);\n      } catch (error) {\n        console.error('Error loading courses:', error.message);\n      }\n    };\n    loadCourses();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading courses...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Uploaded Transcript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), uploadedTranscript ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Transcript file: \", uploadedTranscript.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No transcript uploaded yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Completed Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), completedCourses.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: completedCourses.map((course, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: course\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No completed courses found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Core Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), coreCourses.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: coreCourses.map((course, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [course.CourseTitleLong, \" - \", course.Credits, \" Credits\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No core courses available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Elective Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), electiveCourses.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: electiveCourses.map((course, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [course.CourseTitleLong, \" - \", course.Credits, \" Credits\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No elective courses available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Courses, \"MZb1J/3DHeP4mWIX0A26iRTuFHI=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Courses;\nexport default Courses;\nvar _c;\n$RefreshReg$(_c, \"Courses\");","map":{"version":3,"names":["React","useEffect","useState","fetchCourses","fetchCompletedCourses","useGlobalContext","jsxDEV","_jsxDEV","Courses","_s","coreCourses","setCoreCourses","electiveCourses","setElectiveCourses","completedCourses","setCompletedCourses","loading","setLoading","uploadedTranscript","loadCompletedCourses","formData","FormData","append","response","error","console","message","loadCourses","core","electives","children","fileName","_jsxFileName","lineNumber","columnNumber","name","length","map","course","index","CourseTitleLong","Credits","_c","$RefreshReg$"],"sources":["/Users/eugenewang/Downloads/CapstoneProject/frontend/src/components/Courses.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchCourses, fetchCompletedCourses } from '../services/courseService'; // Import the correct service\nimport { useGlobalContext } from '../context/GlobalContext';\n\nconst Courses = () => {\n    const [coreCourses, setCoreCourses] = useState([]);\n    const [electiveCourses, setElectiveCourses] = useState([]);\n    const [completedCourses, setCompletedCourses] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const { uploadedTranscript } = useGlobalContext();\n\n    useEffect(() => {\n        // Fetch completed courses first\n        const loadCompletedCourses = async () => {\n            if (!uploadedTranscript) return; // Exit if no transcript is uploaded\n\n            try {\n                const formData = new FormData();\n                formData.append('transcript', uploadedTranscript);\n\n                // Assuming you have an endpoint that extracts completed courses\n                const response = await fetchCompletedCourses(formData);\n                if (response.completedCourses) {\n                    setCompletedCourses(response.completedCourses);\n                }\n            } catch (error) {\n                console.error('Error loading completed courses:', error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadCompletedCourses();\n    }, [uploadedTranscript]);\n\n    useEffect(() => {\n        // Fetch core and elective courses\n        const loadCourses = async () => {\n            try {\n                const response = await fetchCourses(); // Assuming fetchCourses gets all available courses\n                const { core, electives } = response;\n\n                setCoreCourses(core || []);\n                setElectiveCourses(electives || []);\n            } catch (error) {\n                console.error('Error loading courses:', error.message);\n            }\n        };\n\n        loadCourses();\n    }, []);\n\n    if (loading) return <div>Loading courses...</div>;\n\n    return (\n        <div>\n            <h2>Uploaded Transcript</h2>\n            {uploadedTranscript ? (\n                <p>Transcript file: {uploadedTranscript.name}</p>\n            ) : (\n                <p>No transcript uploaded yet.</p>\n            )}\n\n            <h2>Completed Courses</h2>\n            {completedCourses.length > 0 ? (\n                <ul>\n                    {completedCourses.map((course, index) => (\n                        <li key={index}>{course}</li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No completed courses found.</p>\n            )}\n\n            <h2>Core Courses</h2>\n            {coreCourses.length > 0 ? (\n                <ul>\n                    {coreCourses.map((course, index) => (\n                        <li key={index}>\n                            {course.CourseTitleLong} - {course.Credits} Credits\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No core courses available.</p>\n            )}\n\n            <h2>Elective Courses</h2>\n            {electiveCourses.length > 0 ? (\n                <ul>\n                    {electiveCourses.map((course, index) => (\n                        <li key={index}>\n                            {course.CourseTitleLong} - {course.Credits} Credits\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No elective courses available.</p>\n            )}\n        </div>\n    );\n};\n\nexport default Courses;\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}