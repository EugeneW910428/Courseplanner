{"ast":null,"code":"var _jsxFileName = \"/Users/eugenewang/Downloads/CapstoneProject/frontend/src/components/Courses.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchCourses } from '../services/courseService';\nimport { useGlobalContext } from '../context/GlobalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Courses = () => {\n  _s();\n  const [coreCourses, setCoreCourses] = useState([]);\n  const [electiveCourses, setElectiveCourses] = useState([]);\n  const [completedCourses, setCompletedCourses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {\n    uploadedTranscript\n  } = useGlobalContext();\n  useEffect(() => {\n    const loadCourses = async () => {\n      if (!uploadedTranscript) return; // Exit if no transcript is uploaded\n\n      try {\n        const formData = new FormData();\n        formData.append('transcript', uploadedTranscript);\n        const {\n          completed,\n          core,\n          electives\n        } = await fetchCourses(formData);\n        setCompletedCourses(completed || []);\n        setCoreCourses(core || []);\n        setElectiveCourses(electives || []);\n      } catch (error) {\n        console.error('Error loading courses:', error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadCourses();\n  }, [uploadedTranscript]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading courses...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Uploaded Transcript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), uploadedTranscript ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Transcript file: \", uploadedTranscript.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No transcript uploaded yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Completed Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), completedCourses.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: completedCourses.map((course, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: course\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No completed courses found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Courses, \"h7H93TbQqTjg9SHzWnQ42gxVcFM=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Courses;\nexport default Courses;\nvar _c;\n$RefreshReg$(_c, \"Courses\");","map":{"version":3,"names":["React","useEffect","useState","fetchCourses","useGlobalContext","jsxDEV","_jsxDEV","Courses","_s","coreCourses","setCoreCourses","electiveCourses","setElectiveCourses","completedCourses","setCompletedCourses","loading","setLoading","uploadedTranscript","loadCourses","formData","FormData","append","completed","core","electives","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","name","length","map","course","index","_c","$RefreshReg$"],"sources":["/Users/eugenewang/Downloads/CapstoneProject/frontend/src/components/Courses.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchCourses } from '../services/courseService';\nimport { useGlobalContext } from '../context/GlobalContext';\n\nconst Courses = () => {\n    const [coreCourses, setCoreCourses] = useState([]);\n    const [electiveCourses, setElectiveCourses] = useState([]);\n    const [completedCourses, setCompletedCourses] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const { uploadedTranscript } = useGlobalContext();\n\n    useEffect(() => {\n        const loadCourses = async () => {\n            if (!uploadedTranscript) return; // Exit if no transcript is uploaded\n\n            try {\n                const formData = new FormData();\n                formData.append('transcript', uploadedTranscript);\n\n                const { completed, core, electives } = await fetchCourses(formData);\n                setCompletedCourses(completed || []);\n                setCoreCourses(core || []);\n                setElectiveCourses(electives || []);\n            } catch (error) {\n                console.error('Error loading courses:', error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadCourses();\n    }, [uploadedTranscript]);\n\n    if (loading) return <div>Loading courses...</div>;\n\n    return (\n        <div>\n            <h2>Uploaded Transcript</h2>\n            {uploadedTranscript ? (\n                <p>Transcript file: {uploadedTranscript.name}</p>\n            ) : (\n                <p>No transcript uploaded yet.</p>\n            )}\n\n            <h2>Completed Courses</h2>\n            {completedCourses.length > 0 ? (\n                <ul>\n                    {completedCourses.map((course, index) => (\n                        <li key={index}>{course}</li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No completed courses found.</p>\n            )}\n\n\n        </div>\n    );\n};\n\nexport default Courses;\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}