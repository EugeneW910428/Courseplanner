{"ast":null,"code":"// services/courseService.js\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5001/api';\n\n// Function to fetch core courses\nexport const getCoreCourses = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/core_courses`);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch core courses:', error);\n    throw error;\n  }\n};\n\n// Function to fetch electives based on career aspiration\nexport const getElectives = async careerAspiration => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/electives`, {\n      params: {\n        careerAspiration\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch electives:', error);\n    throw error;\n  }\n};\nexport const generateSchedule = async formData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/generate-schedule`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Failed to generate schedule:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","getCoreCourses","response","get","data","error","console","getElectives","careerAspiration","params","generateSchedule","formData","post","headers"],"sources":["/Users/eugenewang/Downloads/CapstoneProject/frontend/src/services/courseService.js"],"sourcesContent":["// services/courseService.js\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5001/api';\n\n// Function to fetch core courses\nexport const getCoreCourses = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/core_courses`);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch core courses:', error);\n    throw error;\n  }\n};\n\n// Function to fetch electives based on career aspiration\nexport const getElectives = async (careerAspiration) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/electives`, {\n      params: { careerAspiration },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Failed to fetch electives:', error);\n    throw error;\n  }\n};\n\nexport const generateSchedule = async (formData) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/generate-schedule`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to generate schedule:', error);\n      throw error;\n    }\n  };\n  \n\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,eAAe,CAAC;IAChE,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,YAAY,GAAG,MAAOC,gBAAgB,IAAK;EACtD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,YAAY,EAAE;MAC5DS,MAAM,EAAE;QAAED;MAAiB;IAC7B,CAAC,CAAC;IACF,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMK,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;EAChD,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACa,IAAI,CAAC,GAAGZ,YAAY,oBAAoB,EAAEW,QAAQ,EAAE;MAC/EE,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}